fedora-review: Tools to help review packages for inclusion in Fedora
---------------------------------------------------------------------

This tool automates much of the dirty work when reviewing a package
for the Fedora Package Collection.

Like:
- Downloading SRPM & SPEC from Bugzilla report
- Build and install package in mock
- Download upstream source
- Check md5sums
- Run rpmlint
- Generate review template with both manual & automated checks serving
  as a starting point for the review work.

fedora-review is still under heavy development.


Contacts
--------

* IRC: #fedora-review @ freenode
* Mailing list: fedorareview@lists.fedorahosted.org
* wiki: https://fedorahosted.org/FedoraReview/wiki/WikiStart


License
-------
fedora-review is licensed under GPLv2+, for more details check COPYING.


Dependencies
------------

Install dependencies:

    # yum install python-straight-plugin python-BeautifulSoup \
          python-bugzilla  python-requests python-kitchen \
          fedora-packager rpmdevtools mock git python-fedora

The mock requirement is not hard, it's possible to use fedora-review
without mock when always using the --prebuilt/-p option. This means
that packages must be built using other tools e. g., koji. Generally,
installing without mock is not recommended.


Download
--------
Install git and run the command below to clone the source:

    $ git clone http://git.fedorahosted.org/git/FedoraReview.git

Alternative repository for users wishing to use github:
git clone git://github.com/timlau/FedoraReview.git


Running from git
----------------

After downloading (above) checkout proper branch (usually 'devel')
and use try-fedora-review:

    $ cd FedoraReview
    $ git checkout devel
    $ ./update-version
    $ ./try-fedora-review --help

To run from any directory, install try-fedora-review according to
instructions in that script. update-version only needs to run once.


Usage
-----

    $ nroff -man fedora-review.1 | more
    $ fedora-review --help

There's more in the wiki (above)


Extending
---------

fedora-review can be extended with small shell-scripts and full-featured
python plugins. See the wiki (above).



== Using flags ==

'''The following only applies to the 'flags' branch!'''

fedora-review has a concept of flags. Flags are set by user to affect how testing
is done. In the background, flags are registered by different Registrys and acted
upon in checks.

As user, list all flags using -f and set one using -D (or --define):
{{{
    $  fedora-review -f
       EPEL5: review a package for EPEL5
       ...
    $  fedora-review -b 787713 -D EPEL5
}}}
sets the EPEL5 flag. One could also use EPEL5=foo to assign a string to
the flag.

For this to work, the flag must be registered. This can be done either in
python or in a shell script. In python, implement the register_flags
method in the module Registry:
{{{
class Registry(RegistryBase):
    ...
    def register_flags(self):
        epel5 = Flag('EPEL5', 'Review package for EPEL5', __file__)
        self.checks.flags.add(epel5)
}}}}

In a shell script, add a @register-flag tag:
{{{
    #!/bin/bash
    # @register-flag: EPEL6  Enable EPEL6 checking
    # @register-flag: EPEL7  Enable EPEL7 checking
    exit $FR_NA
}}}

In a python check, flags are available as self.flags. An example:
{{{
    if self.flags['EPEL5']:
        self.set_passed(self.FAIL,
                        'Missing buildroot (required for EPEL5)')
    else:
        self.set_passed(self.PASS)
        return

}}}

In a shell check, flags are available as $FR_FLAGS. An example:
{{{
    if [ "${FR_FLAGS['EPEL5']}" = '' ]; then
         whatever
    else
         whatever
    fi
}}}
~
