#-*- coding: utf-8 -*-
"""This is an example file of a language specific plugin

This plugin aims to implement Fedora Packaging Guidelines for Java[1]
as a fedora-review plugin.

[1] https://fedoraproject.org/wiki/Packaging:Java
"""

import re
from FedoraReview import CheckBase, RegistryBase


class Registry(RegistryBase):
    """ Dotted named extends the base group, here 'Java'. """
    group = 'Java.guidelines'

    def is_applicable(self):
        """ Use the is_applicable() defined in main group: """
        return self.checks.groups['Java'].is_applicable()

class JavaCheckBase(CheckBase):
    """Base check for Java checks containing miscellaneous functions"""

    def __init__(self, base):
        CheckBase.__init__(self, base, __file__)

    def _is_maven_pkg(self):
        """Returns True if this is likely Maven package"""
        for build_r in self.spec.build_requires:
            if 'maven-local' in build_r:
                return True
        return False

    def _is_xmvn_pkg(self):
        """Returns True if this package is being built with XMvn (new style
        Maven packaging)"""
        return self.spec.find_re('[^#]*%mvn_build')

    def _get_javadoc_sub(self):
        """Returns name of javadoc rpm or None if no such subpackage
        exists."""
        for pkg in self.spec.packages:
            if pkg.endswith('-javadoc'):
                return pkg
        return None


class CheckJavadoc(JavaCheckBase):
    """Check if javadoc subpackage exists and contains documentation"""

    def __init__(self, base):
        JavaCheckBase.__init__(self, base)
        self.url = 'https://fedoraproject.org/wiki/Packaging:Java' \
                   '#Javadoc_installation'
        self.text = "Javadoc documentation files are generated and " \
                    "included in -javadoc subpackage"
        self.automatic = True

    def run_on_applicable(self):
        """ run check for java packages """
        pkg = self._get_javadoc_sub()
        if not pkg:
            self.set_passed(self.FAIL, "No javadoc subpackage present")
            return

        # and now look for at least one html file
        if self.rpms.find('*.html', pkg):
            self.set_passed(self.PASS)
            return
        self.set_passed(self.FAIL, "No javadoc html files found in %s" % pkg)


class CheckNewStyleMaven(JavaCheckBase):
    """Maven packages should use new style packaging style"""

    group = "Maven"

    def __init__(self, base):
        JavaCheckBase.__init__(self, base)
        self.text = """Maven packages should use new style packaging"""
        self.url = 'https://fedoraproject.org/wiki/Packaging:Java#Apache_Maven'
        self.automatic = True
        self.type = 'MUST'

    def run(self):
        if self._is_maven_pkg() and self._is_xmvn_pkg():
            self.set_passed(self.PASS)
        elif self._is_maven_pkg():
            self.set_passed(self.FAIL, "If possible update your package to "
                            "latest guidelines")
        else:
            self.set_passed(self.NA)


# vim: set expandtab ts=4 sw=4:
